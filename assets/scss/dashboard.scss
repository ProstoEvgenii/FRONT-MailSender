@import 'utils/variables.scss';
@import 'utils/globalClass.scss';

:root {
  --primary-light: #8abdff;
  --primary: #6d5dfc;
  --primary-dark: #5b0eeb;

  --white: #FFFFFF;
  --greyLight-1: #E4EBF5;
  --greyLight-2: #c8d0e7;
  --greyLight-3: #bec8e4;
  --greyDark: #9baacf;
}

$shadow: .3rem .3rem .6rem var(--greyLight-2),
  -.2rem -.2rem .5rem var(--white);
$inner-shadow: inset .2rem .2rem .5rem var(--greyLight-2),
  inset -.2rem -.2rem .5rem var(--white);

.settingsTitle {

  font-size: clamp(1.25rem, 3.5vw, 2rem);
  font-weight: 700;

}

.info {

  &_desc {
    display: flex;
    justify-content: space-between;
    align-items: center;

    p {
      font-size: 1.6rem;
      width: 100%;
      text-align: center;
    }
  }

  &_settings {


    &__schedule {
      box-shadow: .8rem .8rem 1.4rem var(--greyLight-2),
        -.2rem -.2rem 1.8rem var(--white);
      width: fit-content;
      border-radius: 3rem;
      padding: 25px;
    }

    .toggle_row {
      display: flex;
      align-items: center;
    }

    .switch {
      margin-left: 10px;
      grid-column: 1 / 2;
      display: grid;
      grid-template-columns: repeat(2, min-content);
      grid-gap: 3rem;
      justify-self: center;

      input {
        display: none;
      }

      &__1 {
        width: 6rem;

        label {
          display: flex;
          align-items: center;
          width: 100%;
          height: 3rem;
          box-shadow: $shadow;
          background: rgba(255, 255, 255, 0);
          position: relative;
          cursor: pointer;
          border-radius: 1.6rem;

          &::after {
            content: "";
            position: absolute;
            left: .4rem;
            width: 2.1rem;
            height: 2.1rem;
            border-radius: 50%;
            background: var(--greyDark);
            transition: all .4s ease;
          }

          &::before {
            content: '';
            width: 100%;
            height: 100%;
            border-radius: inherit;
            background: linear-gradient(330deg, var(--primary-dark) 0%, var(--primary) 50%, var(--primary-light) 100%);
            opacity: 0;
            transition: all .4s ease;
          }
        }
      }

      & input:checked {
        &~label {
          &::before {
            opacity: 1;
          }

          &::after {
            left: 57%;
            background: var(--greyLight-1);
          }
        }
      }
    }


    // .input_row {
    //   display: flex;
    //   align-items: center;
    // }

    .field__input {
      margin-left: 10px;
      width: 5rem;
      height: 3rem;
      border: none;
      border-radius: 1rem;
      font-size: 1rem;
      padding-left: 0.7rem;
      box-shadow: $inner-shadow;
      background: none;
      font-family: inherit;
      color: var(--greyDark);

      &::placeholder {
        color: var(--greyLight-3);
      }

      &:focus {
        outline: none;
        box-shadow: $shadow;
      }
    }

    p {
      font-size: 1.6rem;
      width: 100%;
      text-align: center;
    }
  }



  &_preview {
    padding-top: 2vw;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 1vw;

    &__title {
      font-size: 2rem;
      font-weight: 600;
      line-height: 125%;
    }

    img {
      height: 500px;
      border: 1px solid var(--primary);
      border-radius: 0.5rem;
    }
  }

  &_send {
    display: flex;
    justify-content: center;
    padding-top: 1.5vw;
    gap: 1.5vw;
  }


}